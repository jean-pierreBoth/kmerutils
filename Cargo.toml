[package]
name = "kmerutils"
version = "0.0.1"
authors = ["jeanpierre.both@gmail.com"]
#repository = "https://github.com/jean-pierreBoth/kmerutils"
#documentation = "https://docs.rs/kmerutils"
keywords = ["genomics", "hash", "kmer"]
edition = "2018"
license = "MIT OR Apache-2.0"
description = "Kmer counting, hashing"


[features]

# declare a feature with no dependancy to get some modulated debug print
# to be run with cargo build --features verbose_1
#verbose_1 = [ ]

[[bin]]

name= "parsefastq"
path= "src/bin/parsefastq.rs"

[[bin]]

name= "qualityloader"
path= "src/bin/qualityload.rs"

[[example]]

name="kmerreload"
path="examples/reloadkmermulti.rs"


[lib]

lib = "kmerutils"
path = "src/lib.rs"
test=true

doc=true
#[[example]]




[dependencies]
# default is version spec is ^ meaning can update up to max non null version number
# cargo doc --no-deps avoid dependencies doc generation
#

serde= {version = "1.0"}
serde_derive={ version = "1.0"}

histogram =  {version = "0.6"}

multimap= {version =  "0.4.0"}

# for networking
zmq= {version =  "0.9"}
xdr-codec= {version = "0.2.5"}

# for //
crossbeam-utils = {version = "0.7"}
crossbeam-channel = {version = "0.5"}

parking_lot ={version="0.11"}
rayon = {version = "1.4"}
num_cpus = {version = "1.13.0"}

time = {version = "0.2"}
ndarray = {version = "0.13"}
needletail = {version = "0.4"}
wavelet-matrix = { version = "0.4.7"}
clap = {version = "2.33"}

#  for hashing 
wyhash = {version = "0.4"}
rand = {version = "0.7"}
rand_distr = {version = "0.3"}
rand_xorshift = {version = "0.2"}
rand_xoshiro = {version = "0.4"}
#probminhash = {git = "https://github.com/jean-pierreBoth/probminhash"}
probminhash = {version = "0.1.0", path = "../probminhash"}

cuckoofilter = {version="0.5"}
bloom = {version="0.3"}
metrohash = {verion ="1.0.5"}

fxhash = { version= "0.2"}
indexmap = { version = "1.6"}
fnv = {version= "1.0"}

lazy_static = { version = "1.4"}

redis = { version = "0.9.0"}
# decreasing order of log for debug build : (max_level_)trace debug info warn error off
# decreasing order of log for release build (release_max_level_)  .. idem
log = { version = "0.4", features = ["max_level_trace", "release_max_level_warn"] }
env_logger = { version = "0.8"}
